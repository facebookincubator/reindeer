##
## Reindeer Config
##
## This file sets all of Reindeer's basic configuration. This file also marks
## the top of the reindeer-managed directory, as all other paths are relative to
## this one (both paths mentioned in this file, and implicit).
##
## Reindeer is under active development, and the layout and options in this file
## may change.

# Write output to third-party/BUCK
# This also sets the default input (manifest_path) to third-party/Cargo.toml
third_party_dir = "third-party"

# If a fixups.toml file is needed (eg, the package has a build.rs), then
# generate a template fixups.toml to be edited.
fixup_templates = true

# Configuration for generated BUCK file
[buck]
# Name of the generated file
file_name = "BUCK" # default

# Rules used for various kinds of targets. These rules don't directly
# correspond with BUCK rules - they have extra attributes such as
# per-platform settings. The intent is that you provide a set of macro
# definitions which resolve them to appropriate underlying rules
# suitable for your environment. (This may also work for Buck-like
# build systems such as Bazel.)
rust_library = "cargo.rust_library"     # A plain Rust library
rust_binary = "cargo.rust_binary"       # A Rust executable
buildscript_genrule = "buildscript_run" # Rule for running a build script to produce rustc args and generated sources

# Load the macros to which the rules above will resolve.
buckfile_imports = """
load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")
"""

# Banner comment for the generated BUCK File.
generated_file_header = """
##
## \u0040generated by reindeer
## Do not edit by hand.
##
## See README.md for directions on how to update this.
##
"""
